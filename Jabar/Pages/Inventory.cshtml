@page
@model Jabar.Pages.InventoryModel
@{
    ViewData["Title"] = "Inventory";
}

<h1>Inventory</h1>

<div>
    <label class="col-3 m-1">Filter Results:</label>
    <input type="text" class="col-6" name="resultFilter" />
    <!-- TODO Implement filter -->
</div>

<div id="Tabs" role="tabpanel" class="m-3">
    <ul class="nav nav-tabs" role="tablist">
        <li class="active"><a href="#all" aria-controls="all" role="tab" data-toggle="tab" class="btn btn-outline-dark active">All</a></li>
        <li><a href="#toReorder" aria-controls="toReorder" role="tab" data-toggle="tab" class="btn btn-outline-dark">To Reorder</a></li>
        <li><a href="#assemblies" aria-controls="assemblies" role="tab" data-toggle="tab" class="btn btn-outline-dark">Assemblies</a></li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="all">
            This will contain all products


            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ItemName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].OnHandQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ListRetailCost)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ReorderQty)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @if (item.OnHandQty <= item.ReorderQty)
                                {
                                    <form method="post" class="list-group-horizontal">
                                        <!-- since this is in a post method asp-page-handler="subtract" goes to the razor page code and -->
                                        <!-- looks for an onpost or onpostasync method with subtract in it, so in this case it goes to  -->
                                        <!-- OnPostSubtractAsync() which takes an int id which is passed via the asp-route-id="" tag... -->
                                        <!-- but it doesnt have to be id, they just have to match... so it could be asp-route-nutz, as  -->
                                        <!-- long as OnPostSubtractAsync(int nutz) exists in the razor page code... I think -->
                                        <button asp-page-handler="Subtract" asp-route-id="@item.ItemId" class="badge badge-pill badge-danger">sub</button>
                                        <span style="color:red; font-weight:bold">
                                            @item.OnHandQty
                                        </span>
                                        <button asp-page-handler="Add" asp-route-id="@item.ItemId" class="badge badge-pill badge-dark">add</button>
                                    </form>
                                }
                                else
                                {
                                    <form method="post" class="list-group-horizontal">
                                        <button asp-page-handler="Subtract" asp-route-id="@item.ItemId" class="badge badge-pill badge-dark">sub</button>
                                        <span style="color:black; ">
                                            @item.OnHandQty
                                        </span>
                                        <button asp-page-handler="Add" asp-route-id="@item.ItemId" class="badge badge-pill badge-dark">add</button>
                                    </form>
                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ListRetailCost)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReorderQty)
                            </td>

                            <td>
                               
                                <a asp-page-handler="Details" asp-route-id="@item.ItemId" data-ItemIndex="@Model.Items.IndexOf(item)" class="btn btn-dark" data-toggle="modal" data-target="#getDetailsModal">Details</a>
                               <a asp-page="./ItemDelete" asp-route-id="@item.ItemId" class="btn btn-danger">Delete</a>
                                @*<a asp-page="./Edit" asp-route-id="@item.ItemId">Edit</a> |
        <a asp-page="./Details" asp-route-id="@item.ItemId">Details</a> |
        >*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- TODO Loop through all products, checking the filter, and display all results -->
            <!-- Columns needed >>
                Product name (hyperlink to associated product),
                On hand quantity for the product and a button that will let the user edit the quantity,
                In transit value for the product,
                Reorder value for the product,
                A field that includes an assembly button (only if the item can be assembled)
            -->
        </div>
        <div role="tabpanel" class="tab-pane" id="toReorder">
            This will contain all products that have an onhand quantity less than the associated reorder value
            <!-- TODO Loop through all products, checking the filter, and display all results whose on hand quantity is less than the associated reorder quantity -->
            <!-- Columns needed >>
                Product name (hyperlink to associated product page),
                On hand quantity for the product and a button that will let the user edit the quantity,
                In transit value for the product,
                Reorder value for the product,
                A button that lets the user order more of the associated product
            -->
        </div>
        <div role="tabpanel" class="tab-pane" id="assemblies">
            This will contain all products that can be assembled
            <!-- TODO Loop through all products, checking the filter, and display all products that can be assembled -->
            <!-- Columns needed >>
                Product name (hyperlink to associated product page),
                On hand quantity for the product and a button that will let the user edit the quantity,
                A button that lets the user create an assembly for the item
            -->
        </div>
    </div>
</div>

<a asp-page="ItemCreate" class="floating_circle_button" data-toggle="modal" data-target="#createItemModal">+</a>

<!--Get Details Modal-->

<div class="modal fade" id="getDetailsModal" tabindex="-1" role="dialog" aria-labelledby="createItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="contentinfo">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createItemModalLabel">Create Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-10">

                        <!--start of my stuff-->
                       
                            <div>
                                <h4>Item details, this modal is still broken</h4>
                                <hr />
                              
                                <dl class="row indexinput">
                                    <dt class="col-sm-2">
                                        @Html.DisplayNameFor(model => model.Item.ItemName)
                                    </dt>
                                    <dt class="col-sm-10">
                                       
                                        @Html.DisplayFor(model=> model.Item.ItemName)
                                    </dt>
                                    <dt class="col-sm-2">
                                        @Html.DisplayNameFor(model => model.Item.Description)
                                    </dt>
                                    <dd class="col-sm-10">
                                        @Html.DisplayFor(model => model.Item.Description)
                                    </dd>
                                    <dt class="col-sm-2">
                                        @Html.DisplayNameFor(model => model.Item.OnHandQty)
                                    </dt>
                                    <dd class="col-sm-10">
                                        @Html.DisplayFor(model => model.Item.OnHandQty)
                                    </dd>
                                    
                                    
                                </dl>
                            </div>
                        <div>
                             
                            
                        </div>
                        <!--bottom of my stuff-->

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<script>
    $('#getDetailsModal').on('show.bs.modal', function (event) {
      
        var item = event.relatedTarget.dataset.ItemIndex
        //parseInt(item);
        int itemindex = 0
       
        var modal = $(this)
        @Model.Index = parseInt(item)
       
        modal.find('.modal-body detailcontent').val(itemId)
    })

 
</script>

<!--Create Item Modal -->
<div class="modal fade" id="createItemModal" tabindex="-1" role="dialog" aria-labelledby="createItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createItemModalLabel">Create Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-10">
                        <form method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Item.ItemName" class="control-label"></label>
                                <input asp-for="Item.ItemName" class="form-control" />
                                <span asp-validation-for="Item.ItemName" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.Description" class="control-label"></label>
                                <input asp-for="Item.Description" class="form-control" />
                                <span asp-validation-for="Item.Description" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.OnHandQty" class="control-label"></label>
                                <input asp-for="Item.OnHandQty" class="form-control" />
                                <span asp-validation-for="Item.OnHandQty" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.ListRetailCost" class="control-label"></label>
                                <input asp-for="Item.ListRetailCost" class="form-control" />
                                <span asp-validation-for="Item.ListRetailCost" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.ReorderQty" class="control-label"></label>
                                <input asp-for="Item.ReorderQty" class="form-control" />
                                <span asp-validation-for="Item.ReorderQty" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.MaxQty" class="control-label"></label>
                                <input asp-for="Item.MaxQty" class="form-control" />
                                <span asp-validation-for="Item.MaxQty" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.MeasureAmnt" class="control-label"></label>
                                <input asp-for="Item.MeasureAmnt" class="form-control" />
                                <span asp-validation-for="Item.MeasureAmnt" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Item.LastModifiedBy" class="control-label"></label>
                                <input asp-for="Item.LastModifiedBy" class="form-control" />
                                <span asp-validation-for="Item.LastModifiedBy" class="text-danger"></span>
                            </div>  
                            <div class="form-group">
                                <label asp-for="Item.MeasureID" class="control-label"></label>
                                <input asp-for="Item.MeasureID" class="form-control" />
                                <span asp-validation-for="Item.MeasureID" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <button asp-page-handler="Create" class="btn btn-primary">Create</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<!-- TODO create popup box for editing an items quantity -->
<script>
    $('#createItemModal').on('hidden.bs.modal', function (e) {
       $('#createItemModal modal-body').load('@Url.Page("Index")');
    })
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
</script>