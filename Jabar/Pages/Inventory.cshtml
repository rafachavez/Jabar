@page
@model Jabar.Pages.InventoryModel
@{
    ViewData["Title"] = "Inventory";
}

<h1>Inventory</h1>

<div>
    <label class="col-3 m-1">Filter Results:</label>
    <input type="text" class="col-6" name="resultFilter" />
    <!-- TODO Implement filter -->
</div>

<div id="Tabs" role="tabpanel" class="m-3">
    <ul class="nav nav-tabs" role="tablist">
        <li class="active"><a href="#all" aria-controls="all" role="tab" data-toggle="tab" class="btn btn-outline-dark active">All</a></li>
        <li><a href="#toReorder" aria-controls="toReorder" role="tab" data-toggle="tab" class="btn btn-outline-dark">To Reorder</a></li>
        <li><a href="#assemblies" aria-controls="assemblies" role="tab" data-toggle="tab" class="btn btn-outline-dark">Assemblies</a></li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="all">
            This will contain all products


            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ItemName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].OnHandQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ListRetailCost)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ReorderQty)
                        </th>
                       
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @if (item.OnHandQty <= item.ReorderQty)
                                {
                                    <span style="color:red; font-weight:bold">

                                        @item.OnHandQty
                                    </span>
                                    <form method="post">
                                        <button asp-page-handler="Add" asp-route-id="@item.ItemId">Add</button>
                                        <button asp-page-handler="Subtract" asp-route-id="@item.ItemId">Subtract</button>
                                    </form>

                                }
                                else
                                {
                                    <span style="color:black; ">
                                        @item.OnHandQty
                                    </span>
                                    <form method="post">
                                        <button asp-page-handler="Add" asp-route-id="@item.ItemId">Add</button>
                                        <button asp-page-handler="Subtract" asp-route-id="@item.ItemId">Subtract</button>
                                    </form>
                                }

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ListRetailCost)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReorderQty)
                            </td>
                   
                            <td>
                                @*<a asp-page="./Edit" asp-route-id="@item.ItemId">Edit</a> |
                                <a asp-page="./Details" asp-route-id="@item.ItemId">Details</a> |
                                <a asp-page="./Delete" asp-route-id="@item.ItemId">Delete</a>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- TODO Loop through all products, checking the filter, and display all results -->
            <!-- Columns needed >>
        Product name (hyperlink to associated product),
        On hand quantity for the product and a button that will let the user edit the quantity,
        In transit value for the product,
        Reorder value for the product,
        A field that includes an assembly button (only if the item can be assembled)
    -->
        </div>
        <div role="tabpanel" class="tab-pane" id="toReorder">
            This will contain all products that have an onhand quantity less than the associated reorder value
            <!-- TODO Loop through all products, checking the filter, and display all results whose on hand quantity is less than the associated reorder quantity -->
            <!-- Columns needed >>
                Product name (hyperlink to associated product page),
                On hand quantity for the product and a button that will let the user edit the quantity,
                In transit value for the product,
                Reorder value for the product,
                A button that lets the user order more of the associated product
            -->
        </div>
        <div role="tabpanel" class="tab-pane" id="assemblies">
            This will contain all products that can be assembled
            <!-- TODO Loop through all products, checking the filter, and display all products that can be assembled -->
            <!-- Columns needed >>
                Product name (hyperlink to associated product page),
                On hand quantity for the product and a button that will let the user edit the quantity,
                A button that lets the user create an assembly for the item
            -->
        </div>
    </div>
</div>
<!-- TODO add create item button floating on bottom right done ish!, this will need to link to the final items create page, not the 
    fake one in the items folder-->
<a asp-page="ItemCreate" class="floating_circle_button">+</a>

<!-- TODO create popup box for editing an items quantity -->